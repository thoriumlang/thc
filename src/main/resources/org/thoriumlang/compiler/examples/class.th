use java.lang.String;
use java.util.List : JavaList;
use org.thoriumlang.compiler.ast.AST;

class MyClass[T] {
    val hash = () => 0;
    val str = () => "none";
    val eq = (o: Object) => "return default";
    is = (t: Type) => "return default";
    match: (Object): Boolean = (o: Object) => Case(o)
                                                .when(none, true)
                                                .otherwise(false);

    logger: Logger = Logger();

    doSomething[U](p1: String, p2: JavaList, p3: T, p4:U, p5: Unknown): None {
        none;
    }

    adder[A](f: (B, C): D, x: E): (F): G {
        (y: H) => f(x, y);
    }

    val add: (Number, Number): Number = (a: Number, b: Number): Number => a.add(b);

    fibonacci(n: Number): Number {
        logger.info("Fibonacci called");
        If(n.eq(0),
            1,
            If(n.eq(1),
                1,
                add(fibonacci(n.sub(1)), fibonacci(n.sub(2)))
            )
        );
    }
}