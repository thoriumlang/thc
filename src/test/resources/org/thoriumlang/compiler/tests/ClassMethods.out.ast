NAMESPACE org.thoriumlang.compiler.tests
NAMESPACE CLASS Class[T] : S[]:
PRIVATE emptyMethod [] () : inferred { none:true }
PRIVATE emptyMethod1 [] (a: A[], b: B[]) : C[] { none:true }
PRIVATE method1 [] () : inferred { true:true }
PRIVATE method2 [] () : inferred { false:true }
PRIVATE method3 [] () : inferred { "string":true }
PRIVATE method4 [] () : inferred { VAL inferred:a = 1:true }
PRIVATE method5 [] () : inferred { VAR inferred:a = 1:true }
PRIVATE method6 [] () : inferred { VAL inferred:a = 1:true }
PRIVATE method7 [] () : inferred { a[]():true }
PRIVATE method8 [] () : inferred { a.a[]():true }
PRIVATE method9 [] () : inferred { a.a:true }
PRIVATE method10 [] () : inferred { a:true }
PRIVATE method11 [] () : inferred { VAL Type[]:attribute = s:true }
PRIVATE method12 [] () : inferred { VAR Number[]:noneVar = none:true }
PRIVATE method13 [] () : inferred { VAR Number[]:pi = 3.14:true }
PRIVATE method14 [] () : inferred { VAR String[]:hello = "Hello":true }
PRIVATE method15 [] () : inferred { VAR Boolean[]:t = true:true }
PRIVATE method16 [] () : inferred { VAR Boolean[]:f = false:true }
PRIVATE method17 [] () : inferred { VAR Number[]:th = this:true }
PRIVATE method18 [] () : inferred { VAR Number[]:ref = identifier:true }
PRIVATE method19 [] () : inferred { VAR Number[]:methodCall = methodName[]():true }
PRIVATE method20 [] () : inferred { VAR Number[]:nested = a.b:true }
PRIVATE method21 [] () : inferred { VAR Number[]:nestedCall = a.b[]():true }
PRIVATE method22 [] () : inferred { VAR Number[]:attrOnDirect = 3.a:true }
PRIVATE method23 [] () : inferred { VAR Number[]:pi2 = 3.14.times[](2):true }
PRIVATE method24 [] () : inferred { 1:true }
PRIVATE method25 [] () : inferred { INDIRECT a.a = 1:true }