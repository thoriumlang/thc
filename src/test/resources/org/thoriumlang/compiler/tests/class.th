class Classname {
    val attribute: Type;
    var noneVar: Number = none;
    var pi: Number = 3.14;
    var hello: String = "Hello";
    var t: Boolean = true;
    var f: Boolean = false;
    var th: Number = this;
    var ref: Number = identifier;
    var methodCall: Number = methodName();
    var nested: Number = a.b;
    var nestedCall: Number = a.b();
    var attrOnDirect: Number = 3.a;
    var pi2: Number = 3.14.times(2);
    public method0() {}
    public method1(): None {}
    private method2(p1: String, p2: Integer): Integer {}
    private method3[T](): Integer {}
    private method4[T](): Integer { none; }
    private method5[T](): Integer { none; none; }
    private method6[T](): Integer { return none; none; }
    private method7[T](): Integer { 1; }
    private fibo(i: Integer) {
        If(i.eq(0))
            .then(0)
            .else(
                If(1)
                    .then(1)
                    .else(
                        fibo(i.minus(1)).plus(fibo(i.minus(2)))
                    )
            );
    }
}