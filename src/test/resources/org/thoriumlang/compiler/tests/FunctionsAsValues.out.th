// namespace org.thoriumlang.compiler.tests

namespace class None : org.thoriumlang.Object {
  val hash = () => {
    return 0;
  };
  val str = () => {
    return "none";
  };
  val eq = (o: Object) => {
    return "return default";
  };
  val is = (t: Type) => {
    return "return default";
  };
  val match: (Object): Boolean = (o: Object) => {
    return Case(o).when(none, true).otherwise(false);
  };

  private adder(i: Integer) {
    return (j: Integer) => {
      return i.add(j);
    };
  }

  private adder2(i: Integer) {
    return [A](j: Integer): String => {
      return i.add(j);
    };
  }

  private adder[A](f: (B, C): D, x: E): (F): G {
    return (y: H) => {
      return f(x, y);
    };
  }
}