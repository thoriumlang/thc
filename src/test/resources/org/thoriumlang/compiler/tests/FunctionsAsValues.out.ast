NAMESPACE org.thoriumlang.compiler.tests
NAMESPACE CLASS None[] : org.thoriumlang.Object[]:
VAL hash: inferred = []():inferred { 0:true }
VAL str: inferred = []():inferred { "none":true }
VAL eq: inferred = [](o: Object[]):inferred { "return default":true }
VAL is: inferred = [](t: Type[]):inferred { "return default":true }
VAL match: (Object[]):Boolean[] = [](o: Object[]):inferred { Case[](o).when[](none,true).otherwise[](false):true }
PRIVATE adder [] (i: Integer[]) : inferred { [](j: Integer[]):inferred { i.add[](j):true }:true }
PRIVATE adder2 [] (i: Integer[]) : inferred { [A](j: Integer[]):String[] { i.add[](j):true }:true }
PRIVATE adder [A] (f: (B[];C[]):D[], x: E[]) : (F[]):G[] { [](y: H[]):inferred { f[](x,y):true }:true }